{"ast":null,"code":"var _jsxFileName = \"/Users/onuralpgyrt/Desktop/ReactDeutschapp/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, CardMedia } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport MultipleChoice from './MultipleChoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menuItems = [{\n  title: 'Multiple Choice',\n  image: 'MultıpleChoıce.png',\n  route: '/multiple-choice'\n}, {\n  title: 'Sätze Bilden',\n  image: 'SatzeBilden.png'\n}, {\n  title: 'Lernen mit Musik',\n  image: 'Lernenmıtmusık.png'\n}, {\n  title: 'Leseverstehen',\n  image: 'LESEVERSTEHEN.png'\n}, {\n  title: 'Wortschatz',\n  image: 'WORTSCHATZ.png'\n}, {\n  title: 'Zuordnung',\n  image: 'ZUORDNUNG-2.png'\n}, {\n  title: 'Grammatik',\n  image: 'GRAMMER.png'\n}, {\n  title: 'Frage & Antwort',\n  image: 'Frage-Antwort.png'\n}];\nconst StyledCard = styled(Card)(({\n  theme\n}) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'transform 0.2s',\n  backgroundColor: '#FFF8E1',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: '0 8px 16px rgba(255, 152, 0, 0.2)'\n  }\n}));\n_c = StyledCard;\nconst StyledCardMedia = styled(CardMedia)({\n  height: 260,\n  width: '100%',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundColor: 'white',\n  borderTopLeftRadius: '8px',\n  borderTopRightRadius: '8px',\n  objectFit: 'cover'\n});\n_c2 = StyledCardMedia;\nfunction App() {\n  _s();\n  const [page, setPage] = useState('menu');\n  if (page === 'multiple-choice') {\n    return /*#__PURE__*/_jsxDEV(MultipleChoice, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4,\n      backgroundColor: '#FFF3E0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      sx: {\n        mb: 4,\n        fontWeight: 'bold',\n        color: '#E65100',\n        textAlign: 'center',\n        textShadow: '2px 2px 4px rgba(0,0,0,0.1)'\n      },\n      children: \"DeutschApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          onClick: () => {\n            if (item.title === 'Multiple Choice') setPage('multiple-choice');\n          },\n          sx: {\n            cursor: item.title === 'Multiple Choice' ? 'pointer' : 'default'\n          },\n          children: [/*#__PURE__*/_jsxDEV(StyledCardMedia, {\n            component: \"img\",\n            image: process.env.PUBLIC_URL + '/' + item.image,\n            title: item.title,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              textAlign: 'center',\n              padding: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h2\",\n              sx: {\n                color: '#E65100',\n                fontWeight: 'medium',\n                fontSize: '1.1rem'\n              },\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ne1SfpM4WL1GUZxSanx3MYVJ0cc=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyledCardMedia\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","Grid","Card","CardContent","CardMedia","styled","MultipleChoice","jsxDEV","_jsxDEV","menuItems","title","image","route","StyledCard","theme","height","display","flexDirection","transition","backgroundColor","transform","boxShadow","_c","StyledCardMedia","width","backgroundSize","backgroundPosition","borderTopLeftRadius","borderTopRightRadius","objectFit","_c2","App","_s","page","setPage","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","children","variant","component","mb","fontWeight","color","textAlign","textShadow","container","spacing","map","item","index","xs","sm","md","onClick","cursor","process","env","PUBLIC_URL","alt","padding","fontSize","_c3","$RefreshReg$"],"sources":["/Users/onuralpgyrt/Desktop/ReactDeutschapp/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Grid, Card, CardContent, CardMedia } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport MultipleChoice from './MultipleChoice';\n\nconst menuItems = [\n  { title: 'Multiple Choice', image: 'MultıpleChoıce.png', route: '/multiple-choice' },\n  { title: 'Sätze Bilden', image: 'SatzeBilden.png' },\n  { title: 'Lernen mit Musik', image: 'Lernenmıtmusık.png' },\n  { title: 'Leseverstehen', image: 'LESEVERSTEHEN.png' },\n  { title: 'Wortschatz', image: 'WORTSCHATZ.png' },\n  { title: 'Zuordnung', image: 'ZUORDNUNG-2.png' },\n  { title: 'Grammatik', image: 'GRAMMER.png' },\n  { title: 'Frage & Antwort', image: 'Frage-Antwort.png' }\n];\n\nconst StyledCard = styled(Card)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  transition: 'transform 0.2s',\n  backgroundColor: '#FFF8E1',\n  '&:hover': {\n    transform: 'scale(1.05)',\n    boxShadow: '0 8px 16px rgba(255, 152, 0, 0.2)',\n  },\n}));\n\nconst StyledCardMedia = styled(CardMedia)({\n  height: 260,\n  width: '100%',\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  backgroundColor: 'white',\n  borderTopLeftRadius: '8px',\n  borderTopRightRadius: '8px',\n  objectFit: 'cover',\n});\n\nfunction App() {\n  const [page, setPage] = useState('menu');\n\n  if (page === 'multiple-choice') {\n    return <MultipleChoice />;\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4, backgroundColor: '#FFF3E0' }}>\n      <Typography \n        variant=\"h4\" \n        component=\"h1\" \n        sx={{ \n          mb: 4, \n          fontWeight: 'bold',\n          color: '#E65100',\n          textAlign: 'center',\n          textShadow: '2px 2px 4px rgba(0,0,0,0.1)'\n        }}\n      >\n        DeutschApp\n      </Typography>\n      <Grid container spacing={3}>\n        {menuItems.map((item, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <StyledCard\n              onClick={() => {\n                if (item.title === 'Multiple Choice') setPage('multiple-choice');\n              }}\n              sx={{ cursor: item.title === 'Multiple Choice' ? 'pointer' : 'default' }}\n            >\n              <StyledCardMedia\n                component=\"img\"\n                image={process.env.PUBLIC_URL + '/' + item.image}\n                title={item.title}\n                alt={item.title}\n              />\n              <CardContent sx={{ textAlign: 'center', padding: '12px' }}>\n                <Typography \n                  variant=\"h6\" \n                  component=\"h2\"\n                  sx={{ \n                    color: '#E65100',\n                    fontWeight: 'medium',\n                    fontSize: '1.1rem'\n                  }}\n                >\n                  {item.title}\n                </Typography>\n              </CardContent>\n            </StyledCard>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}